{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "heimdall.fullname" . }}-postgresql
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  serviceName: {{ template "heimdall.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "heimdall.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "heimdall.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.postgresql.podSecurityContext | nindent 8 }}
      containers:
        - name: postgresql
          securityContext:
            {{- toYaml .Values.postgresql.securityContext | nindent 12 }}
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.databaseName | quote }}
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databaseUsername
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databasePassword
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data/pgdata"
              name: postgresql-data
          {{- with .Values.postgresql.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      volumes:
        - name: postgresql-data
        {{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "heimdall.fullname" . }}-db-data
        {{- else }}
          emptyDir: {}
        {{- end }}
{{- end }}
